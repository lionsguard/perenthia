<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDenied" xml:space="preserve">
    <value>You do not have permission to execute the {0} command.</value>
  </data>
  <data name="ArgsInvalid" xml:space="preserve">
    <value>The number or types of arguments supplied to the command are invalid.</value>
  </data>
  <data name="AttackAttackerFailed" xml:space="preserve">
    <value>{0} attempts to attack but misses.</value>
  </data>
  <data name="AttackFailed" xml:space="preserve">
    <value>Your attack was unsuccessful.</value>
  </data>
  <data name="AttackHitByAttacker" xml:space="preserve">
    <value>You were hit by {0} for {1} points of damage.</value>
  </data>
  <data name="AttackHitDefender" xml:space="preserve">
    <value>You hit {0} for {1} points of damage.</value>
  </data>
  <data name="AttackMiss" xml:space="preserve">
    <value>Your attack fails and you missed your target!</value>
  </data>
  <data name="AttackOutOfRange" xml:space="preserve">
    <value>Target is out of range.</value>
  </data>
  <data name="AttackUnconsciousDefender" xml:space="preserve">
    <value>{0} has been knocked unconscious.</value>
  </data>
  <data name="AttackYouAreUnconscious" xml:space="preserve">
    <value>You have been knocked unconscious.</value>
  </data>
  <data name="AttackYouKilledDefender" xml:space="preserve">
    <value>You killed {0}.</value>
  </data>
  <data name="AttackYouWereKilledByAttacker" xml:space="preserve">
    <value>You were killed by {0}.</value>
  </data>
  <data name="CastBackfired" xml:space="preserve">
    <value>Your spell backfired!</value>
  </data>
  <data name="CastBackfiredKilledCaster" xml:space="preserve">
    <value>You were killed by your own spell!</value>
  </data>
  <data name="CastBackfiredUnconsciousCaster" xml:space="preserve">
    <value>You have been knocked unconscious by your own spell!</value>
  </data>
  <data name="CastChanneling" xml:space="preserve">
    <value>Your channeling is affecting your health.</value>
  </data>
  <data name="CastDamageTarget" xml:space="preserve">
    <value>Your spell has done {0} damage to {1}!</value>
  </data>
  <data name="CasterCastFailed" xml:space="preserve">
    <value>{0} attempts to cast a spell on you but the spell fizzles out with no effect.</value>
  </data>
  <data name="CastFailed" xml:space="preserve">
    <value>Your spell fizzles out with no effect.</value>
  </data>
  <data name="CastKilledTarget" xml:space="preserve">
    <value>Your spell has killed {0}!</value>
  </data>
  <data name="CastNotSelf" xml:space="preserve">
    <value>You can not cast an offensive spell on yourself!</value>
  </data>
  <data name="CastSelfBuff" xml:space="preserve">
    <value>Your Protection has increased by {0}.</value>
  </data>
  <data name="CastTargetBuff" xml:space="preserve">
    <value>{0}'s Protection has been increased by {1}.</value>
  </data>
  <data name="ConfigDefaultCryptoProviderNotFound" xml:space="preserve">
    <value>Default CryptographyProvider not found in application configuration file.</value>
  </data>
  <data name="ConfigDefaultLogProviderNotFound" xml:space="preserve">
    <value>Default LogProvider not found in application configuration file.</value>
  </data>
  <data name="ConfigDefaultWorldProviderNotFound" xml:space="preserve">
    <value>Default WorldProvider not found in application configuration file.</value>
  </data>
  <data name="ConfigRadianceSectionNotFound" xml:space="preserve">
    <value>The 'radiance' section of the application configuration file was not found.</value>
  </data>
  <data name="ConfigWorldFileNotFound" xml:space="preserve">
    <value>A world configuration file was not found for the current virtual world.</value>
  </data>
  <data name="ConfigWorldNotCreated" xml:space="preserve">
    <value>An instance of {0} failed to be initialized from the world configuration file.</value>
  </data>
  <data name="ConfigWorldTypeNotFound" xml:space="preserve">
    <value>An instance of the world type specified in the radiance section of the application configuration file could not be created. wordType = {0}</value>
  </data>
  <data name="CreateCharacterAttributeOutOfRange" xml:space="preserve">
    <value>The {0} attribute does not contain a valid value.</value>
  </data>
  <data name="CreateCharacterAttributePointsOverLimit" xml:space="preserve">
    <value>An invalid number of values was specified for the attributes of the new Character.</value>
  </data>
  <data name="CreateCharacterInvalidGender" xml:space="preserve">
    <value>A gender was not specified for the new Character.</value>
  </data>
  <data name="CreateCharacterInvalidRace" xml:space="preserve">
    <value>A race was not specified for the new Character.</value>
  </data>
  <data name="CreateCharacterInvalidUser" xml:space="preserve">
    <value>You must login before attempt to create a new Character.</value>
  </data>
  <data name="CreateCharacterMaxExceeded" xml:space="preserve">
    <value>You have already created the maximum number of Characters ({0}). In order to create additional Characters you will need to purchase them with Emblem.</value>
  </data>
  <data name="CreateCharacterSkillOutOfRange" xml:space="preserve">
    <value>The {0} skill does not contain a valid value.</value>
  </data>
  <data name="CreateCharacterSkillPointsOverLimit" xml:space="preserve">
    <value>An invalid number of values was specified for the skills of the new Character.</value>
  </data>
  <data name="CreateCharacterSuccess" xml:space="preserve">
    <value>Character was successfully created.</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>An internal error has occurred on the server. Your command was not executed, technical support has been notified of the issue.</value>
  </data>
  <data name="InvalidCommand" xml:space="preserve">
    <value>Invalid Command</value>
  </data>
  <data name="LoginRequired" xml:space="preserve">
    <value>Authentication is required to access this service.</value>
  </data>
  <data name="MsgSayFormat" xml:space="preserve">
    <value>{0} says: {1}</value>
  </data>
  <data name="MsgSayFormatEcho" xml:space="preserve">
    <value>You say: {0}</value>
  </data>
  <data name="MsgShoutFormat" xml:space="preserve">
    <value>{0} shouts: {1}</value>
  </data>
  <data name="MsgShoutFormatEcho" xml:space="preserve">
    <value>You shout: {0}</value>
  </data>
  <data name="MsgTellFormat" xml:space="preserve">
    <value>{0} tells you: {1}</value>
  </data>
  <data name="MsgTellFormatEcho" xml:space="preserve">
    <value>You tell {0}: {1}</value>
  </data>
  <data name="MsgTellNoAvatarDefined" xml:space="preserve">
    <value>Tell requires the name of the person you wish to speak with.</value>
  </data>
  <data name="MsgTellNotFound" xml:space="preserve">
    <value>{0} does not seem to be online.</value>
  </data>
  <data name="NameValidationInvalidCharacters" xml:space="preserve">
    <value>Name can not contain spaces, numbers or special characters such as $@!#.</value>
  </data>
  <data name="NameValidationInvalidLengthLong" xml:space="preserve">
    <value>Name can not be greater than 32 characters in length.</value>
  </data>
  <data name="NameValidationInvalidLengthShort" xml:space="preserve">
    <value>Name be at least 3 characters in length.</value>
  </data>
  <data name="NameValidationInvalidName" xml:space="preserve">
    <value>The name specified is not allowed.</value>
  </data>
  <data name="NameValidationNameAlreadyExists" xml:space="preserve">
    <value>The name chosen already exists.</value>
  </data>
  <data name="PlaceAvatarEnter" xml:space="preserve">
    <value>{0} enters from the {1}.</value>
  </data>
  <data name="PlaceAvatarExit" xml:space="preserve">
    <value>{0} exits to the {1}.</value>
  </data>
  <data name="SkillAdvanced" xml:space="preserve">
    <value>Your skill in {0} has increased to {1}.</value>
  </data>
  <data name="CastSuccess" xml:space="preserve">
    <value>You successfully cast {0} on {1}.</value>
  </data>
  <data name="CastDestroyedObject" xml:space="preserve">
    <value>Your spell has destroyed {0}.</value>
  </data>
  <data name="CastHealSelf" xml:space="preserve">
    <value>Your spell has healed {0} damage.</value>
  </data>
  <data name="CastHealTarget" xml:space="preserve">
    <value>Your spell has healed {0} for {1} damage.</value>
  </data>
  <data name="CastNoAffect" xml:space="preserve">
    <value>Your spell has no affect on {0}.</value>
  </data>
  <data name="CastTargetDamaged" xml:space="preserve">
    <value>You were hit for {0} damage by {1}!</value>
  </data>
  <data name="CastTargetHealed" xml:space="preserve">
    <value>You have been healed for {0} damage by {1}.</value>
  </data>
  <data name="CastTargetKilled" xml:space="preserve">
    <value>You were killed by {0}.</value>
  </data>
  <data name="CastTargetUnconscious" xml:space="preserve">
    <value>You were rendered unconscious by {0}.</value>
  </data>
  <data name="CastUnconsciousTarget" xml:space="preserve">
    <value>Your spell has rendered {0} unconscious.</value>
  </data>
  <data name="AttributeFaded" xml:space="preserve">
    <value>Your {0} returns to normal.</value>
  </data>
  <data name="AttributeAffectedDecreased" xml:space="preserve">
    <value>Your {0} has been decreased by {1}.</value>
  </data>
  <data name="AttributeAffectedIncreased" xml:space="preserve">
    <value>Your {0} has been increased by {1}.</value>
  </data>
  <data name="WorldOffline" xml:space="preserve">
    <value>{0} is currently offline.</value>
  </data>
  <data name="AuthorizationFailed" xml:space="preserve">
    <value>You do not have permission to access this service.</value>
  </data>
</root>